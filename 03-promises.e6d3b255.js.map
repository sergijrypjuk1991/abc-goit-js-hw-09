{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,SACjCC,EAAaF,SAASC,cAAc,kBACpCE,EAAYH,SAASC,cAAc,iBACnCG,EAAcJ,SAASC,cAAc,mBAc3C,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,GACFI,EAAQ,uBAAwCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEtDM,EAAK,sBAAqCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GACjDA,E,IAIP,SAASS,EAAUC,GACjBC,EAAArB,GAASsB,OAAOC,QAAQH,E,CAG1B,SAASI,EAAQC,GACfJ,EAAArB,GAASsB,OAAOI,QAAQD,E,CA7B1BvB,EAAQyB,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAIC,iBAGJ,IAFA,IAAIC,EAAeC,OAAO1B,EAAWe,OAE5BY,EAAI,EAAGA,GAAKzB,EAAYa,MAAOY,GAAK,EAC3CxB,EAAcwB,EAAGF,GAAcG,KAAKd,GAAWe,MAAMV,GACrDM,GAAgBC,OAAOzB,EAAUc,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\n\nformRef.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(evt) {\n  evt.preventDefault();\n  let delayPromise = Number(delayInput.value);\n\n  for (let i = 1; i <= amountInput.value; i += 1) {\n    createPromise(i, delayPromise).then(onSuccess).catch(onError);\n    delayPromise += Number(stepInput.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n\nfunction onSuccess(value) {\n  Notiflix.Notify.success(value);\n}\n\nfunction onError(error) {\n  Notiflix.Notify.failure(error);\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","$ce04d3a99e08e73b$var$onSuccess","value","$parcel$interopDefault","Notify","success","$ce04d3a99e08e73b$var$onError","error","failure","addEventListener","evt","preventDefault","delayPromise","Number","i","then","catch"],"version":3,"file":"03-promises.e6d3b255.js.map"}